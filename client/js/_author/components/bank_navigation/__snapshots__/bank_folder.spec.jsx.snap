// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bank_folder component renders the component as a snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <ListItem
    bank={
        Object {
            "displayName": Object {
              "text": "Spec Name",
            },
          }
    }
    focused={false}
    getBankChildren={[Function]}
    onFocus={[Function]}
    selectItem={[Function]}
>
    <td>
        <i
            className="material-icons"
        >
            folder
        </i>
    </td>
    <td>
        Spec Name
    </td>
    <td />
    <td />
</ListItem>,
  "nodes": Array [
    <ListItem
      bank={
            Object {
                  "displayName": Object {
                    "text": "Spec Name",
                  },
                }
      }
      focused={false}
      getBankChildren={[Function]}
      onFocus={[Function]}
      selectItem={[Function]}
>
      <td>
            <i
                  className="material-icons"
            >
                  folder
            </i>
      </td>
      <td>
            Spec Name
      </td>
      <td />
      <td />
</ListItem>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <BankFolder
        bank={
                Object {
                        "displayName": Object {
                          "text": "Spec Name",
                        },
                      }
        }
        focused={false}
        getBankChildren={[Function]}
        onFocus={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "bank": Object {
            "displayName": Object {
              "text": "Spec Name",
            },
          },
          "focused": false,
          "getBankChildren": [Function],
          "onFocus": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <ListItem
          bank={
                    Object {
                              "displayName": Object {
                                "text": "Spec Name",
                              },
                            }
          }
          focused={false}
          getBankChildren={[Function]}
          onFocus={[Function]}
          selectItem={[Function]}
>
          <td>
                    <i
                              className="material-icons"
                    >
                              folder
                    </i>
          </td>
          <td>
                    Spec Name
          </td>
          <td />
          <td />
</ListItem>,
        "_debugID": 2,
        "_renderedOutput": <ListItem
          bank={
                    Object {
                              "displayName": Object {
                                "text": "Spec Name",
                              },
                            }
          }
          focused={false}
          getBankChildren={[Function]}
          onFocus={[Function]}
          selectItem={[Function]}
>
          <td>
                    <i
                              className="material-icons"
                    >
                              folder
                    </i>
          </td>
          <td>
                    Spec Name
          </td>
          <td />
          <td />
</ListItem>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <BankFolder
    bank={
        Object {
            "displayName": Object {
              "text": "Spec Name",
            },
          }
    }
    focused={false}
    getBankChildren={[Function]}
    onFocus={[Function]}
/>,
}
`;
