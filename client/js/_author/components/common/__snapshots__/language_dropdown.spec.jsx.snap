// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`language_dropdown component renders a snapshot of the component 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="au-c-dropdown au-c-dropdown--small au-u-ml-md"
>
    <select
        id=""
        name=""
        onChange={[Function]}
        tabIndex="0"
        value={undefined}
    >
        <option
            value="639-2%3AENG%40ISO"
        >
            English
        </option>
        <option
            value="639-2%3AHIN%40ISO"
        >
            Hindi
        </option>
        <option
            value="639-2%3ATEL%40ISO"
        >
            Telugu
        </option>
    </select>
</div>,
  "nodes": Array [
    <div
      className="au-c-dropdown au-c-dropdown--small au-u-ml-md"
>
      <select
            id=""
            name=""
            onChange={[Function]}
            tabIndex="0"
            value={undefined}
      >
            <option
                  value="639-2%3AENG%40ISO"
            >
                  English
            </option>
            <option
                  value="639-2%3AHIN%40ISO"
            >
                  Hindi
            </option>
            <option
                  value="639-2%3ATEL%40ISO"
            >
                  Telugu
            </option>
      </select>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <languageDropdown
        updateItem={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "updateItem": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="au-c-dropdown au-c-dropdown--small au-u-ml-md"
>
          <select
                    id=""
                    name=""
                    onChange={[Function]}
                    tabIndex="0"
                    value={undefined}
          >
                    <option
                              value="639-2%3AENG%40ISO"
                    >
                              English
                    </option>
                    <option
                              value="639-2%3AHIN%40ISO"
                    >
                              Hindi
                    </option>
                    <option
                              value="639-2%3ATEL%40ISO"
                    >
                              Telugu
                    </option>
          </select>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="au-c-dropdown au-c-dropdown--small au-u-ml-md"
>
          <select
                    id=""
                    name=""
                    onChange={[Function]}
                    tabIndex="0"
                    value={undefined}
          >
                    <option
                              value="639-2%3AENG%40ISO"
                    >
                              English
                    </option>
                    <option
                              value="639-2%3AHIN%40ISO"
                    >
                              Hindi
                    </option>
                    <option
                              value="639-2%3ATEL%40ISO"
                    >
                              Telugu
                    </option>
          </select>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <languageDropdown
    updateItem={[Function]}
/>,
}
`;
